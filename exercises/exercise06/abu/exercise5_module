
#mount mount google drive
from google.colab import drive
drive.mount('/content/drive')

#absolute path
abs_path ='/content/drive/MyDrive/Exercises_Data_Science_John/affordable_housing (1).csv'
os.path.isfile(abs_path)

#reading working data
housing_project = pd.read_csv('/content/drive/MyDrive/Exercises_Data_Science_John/affordable_housing (1).csv')
#housing_project

#Fix messing data
idx = housing_project[housing_project['MAR_WARD'] == '1'].index[0]
print(f'inconsistent ward label is at index {idx}')
housing_project.at[220, 'MAR_WARD'] = 'Ward 1'
ward_counts = housing_project['MAR_WARD'].value_counts()
ward_counts

import matplotlib.pyplot as plt
import seaborn as sns
sns.set_style('dark')

#Function for AFFORDABLE_UNITS_AT_0_30_AMI that are in pipeline within the various wards

def plot_affordable_units_by_ward(df, status_category):
    df_filtered = df[df['STATUS_PUBLIC'] == status_category]
    ward_stats = df_filtered.groupby('MAR_WARD')['AFFORDABLE_UNITS_AT_0_30_AMI'].mean().reset_index()

        # Plot the mean AFFORDABLE_UNITS_AT_0_30_AMI for each ward
    plt.figure(figsize=(10, 6))
    plt.bar(ward_stats['MAR_WARD'], ward_stats['AFFORDABLE_UNITS_AT_0_30_AMI'], color='skyblue')
    plt.title(f'Mean Affordable Units at 0-30% AMI by Ward for {status_category} Projects')
    plt.xlabel('Ward')
    plt.ylabel('Mean Affordable Units at 0-30% AMI')
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()
    plt.show()
    #return df_filtered


# Specific status category can be  plotted (e.g., 'completed', 'uncompleted', 'pipeline')
plot_affordable_units_by_ward(housing_project, 'Pipeline')



#Status of projects under each unit
import matplotlib.pyplot as plt

def visualize_categories_by_ward(df):


    # Group the data by WARD and STATUS, then count occurrences
    counts = df.groupby(['MAR_WARD', 'STATUS_PUBLIC']).size().unstack(fill_value=0)

    # Plot the stacked bar chart
    plt.figure(figsize=(12, 6))
    counts.plot(kind='bar', stacked=True, color=['skyblue', 'salmon', 'lightgreen'])
    plt.title('Stacked Bar Plot of Categories by Ward')
    plt.xlabel('Ward')
    plt.ylabel('Count')
    plt.xticks(rotation=45, ha='right')
    plt.legend(title='STATUS')
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    plt.show()


visualize_categories_by_ward(housing_project)